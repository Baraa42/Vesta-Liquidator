{
  "abi": [],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "ast": {
    "absolutePath": "interfaces/IAsset.sol",
    "id": 4,
    "exportedSymbols": {
      "IAsset": [
        3
      ]
    },
    "nodeType": "SourceUnit",
    "src": "688:409:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "688:23:0",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 3,
        "nodeType": "ContractDefinition",
        "src": "1023:73:0",
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IAsset",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 2,
          "nodeType": "StructuredDocumentation",
          "src": "713:309:0",
          "text": " @dev This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero\n address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like\n types.\n This concept is unrelated to a Pool's Asset Managers."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          3
        ],
        "name": "IAsset",
        "nameLocation": "1033:6:0",
        "scope": 4,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0-or-later"
  },
  "id": 0
}