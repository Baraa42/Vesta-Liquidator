{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testExample",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff19166201000117905534801561002157600080fd5b5061053f806100316000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063ba414fa611610050578063ba414fa6146100c6578063f8ccbf47146100de578063fa7626d4146100f157600080fd5b80630a9254e4146100775780633a768463146100795780633f5a4a2a146100be575b600080fd5b005b610094737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b610077610100565b6100ce61010a565b60405190151581526020016100b5565b6000546100ce9062010000900460ff1681565b6000546100ce9060ff1681565b565b6100fe600161026a565b60008054610100900460ff161561012a5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156102655760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c65640000000000000000000000000000000000000000000000000000828401528251808303840181526060830190935260009290916101cf917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610498565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610207916104d4565b6000604051808303816000865af19150503d8060008114610244576040519150601f19603f3d011682016040523d82523d6000602084013e610249565b606091505b509150508080602001905181019061026191906104e7565b9150505b919050565b806102de577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516102ce9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16102de6102e1565b50565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561042f5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000009282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490608001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526103b09291602001610498565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526103e8916104d4565b6000604051808303816000865af19150503d8060008114610425576040519150601f19603f3d011682016040523d82523d6000602084013e61042a565b606091505b505050505b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b6000815160005b8181101561047e5760208185018101518683015201610464565b8181111561048d576000828601525b509290920192915050565b7fffffffff000000000000000000000000000000000000000000000000000000008316815260006104cc600483018461045d565b949350505050565b60006104e0828461045d565b9392505050565b6000602082840312156104f957600080fd5b815180151581146104e057600080fdfea2646970667358221220986b1da71648a6777e50bc918196250b52e1cabd3c49daa43f2d24fd67ee405c64736f6c634300080f0033",
    "sourceMap": "95:133:17:-:0;;;1572:26:7;;;-1:-1:-1;;170:28:8;;;;;95:133:17;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100725760003560e01c8063ba414fa611610050578063ba414fa6146100c6578063f8ccbf47146100de578063fa7626d4146100f157600080fd5b80630a9254e4146100775780633a768463146100795780633f5a4a2a146100be575b600080fd5b005b610094737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b610077610100565b6100ce61010a565b60405190151581526020016100b5565b6000546100ce9062010000900460ff1681565b6000546100ce9060ff1681565b565b6100fe600161026a565b60008054610100900460ff161561012a5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156102655760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c65640000000000000000000000000000000000000000000000000000828401528251808303840181526060830190935260009290916101cf917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610498565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610207916104d4565b6000604051808303816000865af19150503d8060008114610244576040519150601f19603f3d011682016040523d82523d6000602084013e610249565b606091505b509150508080602001905181019061026191906104e7565b9150505b919050565b806102de577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516102ce9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16102de6102e1565b50565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561042f5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000009282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490608001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526103b09291602001610498565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526103e8916104d4565b6000604051808303816000865af19150503d8060008114610425576040519150601f19603f3d011682016040523d82523d6000602084013e61042a565b606091505b505050505b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b6000815160005b8181101561047e5760208185018101518683015201610464565b8181111561048d576000828601525b509290920192915050565b7fffffffff000000000000000000000000000000000000000000000000000000008316815260006104cc600483018461045d565b949350505050565b60006104e0828461045d565b9392505050565b6000602082840312156104f957600080fd5b815180151581146104e057600080fdfea2646970667358221220986b1da71648a6777e50bc918196250b52e1cabd3c49daa43f2d24fd67ee405c64736f6c634300080f0033",
    "sourceMap": "95:133:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;131:26;;321:38:8;;250:64;321:38;;;;;201:42:18;189:55;;;171:74;;159:2;144:18;321:38:8;;;;;;;;163:63:17;;;:::i;1819:584:7:-;;;:::i;:::-;;;421:14:18;;414:22;396:41;;384:2;369:18;1819:584:7;256:187:18;170:28:8;;;;;;;;;;;;1572:26:7;;;;;;;;;131::17;:::o;163:63::-;203:16;214:4;203:10;:16::i;1819:584:7:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:7;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;622:74:18;;;2221:17:7;712:18:18;;;705:34;2196:43:7;;;;;;;;;595:18:18;;;2196:43:7;;;-1:-1:-1;;1671:64:7;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;;;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:7:o;3255:157::-;3315:9;3310:96;;3345:30;;;;;2098:2:18;2080:21;;;2137:2;2117:18;;;2110:30;2176:25;2171:2;2156:18;;2149:53;2234:2;2219:18;;1896:347;3345:30:7;;;;;;;;3389:6;:4;:6::i;:::-;3255:157;:::o;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;2450:74:18;;;2670:17:7;2540:18:18;;;2533:34;;;;2705:4:7;2583:18:18;;;2576:34;2482:11:7;;1671:64;2579:43;;2423:18:18;;2645:67:7;;;;;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;;;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:7;2813:7;:14;;;;;;;;2410:424::o;750:336:18:-;791:3;829:5;823:12;853:1;863:128;877:6;874:1;871:13;863:128;;;974:4;959:13;;;955:24;;949:31;936:11;;;929:52;892:12;863:128;;;1009:6;1006:1;1003:13;1000:48;;;1044:1;1035:6;1030:3;1026:16;1019:27;1000:48;-1:-1:-1;1064:16:18;;;;;750:336;-1:-1:-1;;750:336:18:o;1091:324::-;1288:66;1280:6;1276:79;1271:3;1264:92;1246:3;1372:37;1406:1;1401:3;1397:11;1389:6;1372:37;:::i;:::-;1365:44;1091:324;-1:-1:-1;;;;1091:324:18:o;1420:189::-;1549:3;1574:29;1599:3;1591:6;1574:29;:::i;:::-;1567:36;1420:189;-1:-1:-1;;;1420:189:18:o;1614:277::-;1681:6;1734:2;1722:9;1713:7;1709:23;1705:32;1702:52;;;1750:1;1747;1740:12;1702:52;1782:9;1776:16;1835:5;1828:13;1821:21;1814:5;1811:32;1801:60;;1857:1;1854;1847:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testExample()": "3f5a4a2a",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "test/Contract.t.sol",
    "id": 24136,
    "exportedSymbols": {
      "ContractTest": [
        24135
      ],
      "DSTest": [
        2189
      ],
      "Script": [
        2452
      ],
      "StdStorage": [
        5480
      ],
      "Test": [
        5382
      ],
      "Vm": [
        7501
      ],
      "console": [
        15565
      ],
      "console2": [
        23629
      ],
      "stdError": [
        5452
      ],
      "stdJson": [
        2812
      ],
      "stdMath": [
        6721
      ],
      "stdStorage": [
        6582
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:190:17",
    "nodes": [
      {
        "id": 24119,
        "nodeType": "PragmaDirective",
        "src": "39:24:17",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 24120,
        "nodeType": "ImportDirective",
        "src": "65:28:17",
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 24136,
        "sourceUnit": 6722,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24135,
        "nodeType": "ContractDefinition",
        "src": "95:133:17",
        "nodes": [
          {
            "id": 24126,
            "nodeType": "FunctionDefinition",
            "src": "131:26:17",
            "body": {
              "id": 24125,
              "nodeType": "Block",
              "src": "155:2:17",
              "statements": []
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "140:5:17",
            "parameters": {
              "id": 24123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "145:2:17"
            },
            "returnParameters": {
              "id": 24124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "155:0:17"
            },
            "scope": 24135,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24134,
            "nodeType": "FunctionDefinition",
            "src": "163:63:17",
            "body": {
              "id": 24133,
              "nodeType": "Block",
              "src": "193:33:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 24130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "214:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24129,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        672,
                        693
                      ],
                      "referencedDeclaration": 672,
                      "src": "203:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 24131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "203:16:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24132,
                  "nodeType": "ExpressionStatement",
                  "src": "203:16:17"
                }
              ]
            },
            "functionSelector": "3f5a4a2a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testExample",
            "nameLocation": "172:11:17",
            "parameters": {
              "id": 24127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "183:2:17"
            },
            "returnParameters": {
              "id": 24128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "193:0:17"
            },
            "scope": 24135,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24121,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5382,
              "src": "120:4:17"
            },
            "id": 24122,
            "nodeType": "InheritanceSpecifier",
            "src": "120:4:17"
          }
        ],
        "canonicalName": "ContractTest",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          24135,
          5382,
          2452,
          2189
        ],
        "name": "ContractTest",
        "nameLocation": "104:12:17",
        "scope": 24136,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 17
}